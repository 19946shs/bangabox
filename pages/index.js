import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { FirebaseOptions, getApp, initializeApp } from "firebase/app";
import { getAuth, signInWithRedirect, GoogleAuthProvider } from 'firebase/auth';
import { useEffect, useState } from 'react';

export default function Home() {
  let firebaseApp;
  const provider = new GoogleAuthProvider();

  const [authUser, setAuthUser] = useState(null);
  const [loggedIn, setLoggedIn] = useState(false);
  const [loading, setLoading] = useState(true);
  
  const firebaseConfig = {
    apiKey: 'AIzaSyB_WGC4Txfi96hl-DHjBmQAETz1THPJNtQ',
    authDomain: 'fluid-dynamics-e684a.firebaseapp.com',
    databaseURL: process.env.DATABASE_URL,
    projectId: process.env.PROJECT_ID,
  };

  try {
    firebaseApp = getApp()
  } catch {
    firebaseApp = initializeApp(firebaseConfig)
  }
  const firebaseAuth = getAuth(firebaseApp);

  firebaseAuth.onAuthStateChanged((authState) => {
    if(authState) {
      setLoggedIn(true)
      console.log('%cDebug JCOLE :: ', 'background: #222; color: #bada55', authState);
    } else {
      setLoggedIn(false)
      console.log('%cDebug SNOOP :: ', 'background: #222; color: #bada55', authState);
      setAuthUser(null);
    }
  })

  const signOut = () => {
    const firebaseAuth = getAuth(firebaseApp);
    firebaseAuth.signOut()
  }

  const login = () => {
    const firebaseAuth = getAuth(firebaseApp);
    signInWithRedirect(firebaseAuth, provider)
      .then((result) => {
        const credential = GoogleAuthProvider.credentialFromResult(result);
        const token = credential.accessToken;
        const user = result.user;
        setAuthUser(user);
        // ...
      }).catch((error) => {
        const errorCode = error.code;
        const errorMessage = error.message;
        const email = error.customData.email;
        const credential = GoogleAuthProvider.credentialFromError(error);
      });
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>BengaBox</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        {loggedIn && <button onClick={signOut}>SIGN OUT</button>}
        {!loggedIn && <button onClick={login}>LOG IN</button>}
      </div>
      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
